services:
  app:
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+psycopg2://admin:secret@db:5432/transactions_db
      - TEST_DATABASE_URL=postgresql+psycopg2://admin:secret@test_db:5432/transactions_test_db
      - HOST=0.0.0.0
      - PORT=8000
      - API_KEY=secret-key
      - LOG_LEVEL=INFO
    depends_on:
      db:
        condition: service_healthy
      test_db:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: transactions_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d transactions_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  test_db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: transactions_test_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d transactions_test_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:
  postgres_test_data:


networks:
  app-network:
    driver: bridge
